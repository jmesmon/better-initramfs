#!/bin/sh
# -*- mode: shell-script; coding: utf-8-emacs-unix; sh-basic-offset: 8; indent-tabs-mode: t -*-
# This code is under Simplified BSD License, see LICENSE for more info
# Copyright (c) 2010, Piotr Karbowski
# All rights reserved.

# Load functions.
. /functions.sh

# Prepare dirs
run dodir /dev /newroot /sbin /proc /sys /etc /var/log /var/run
[ -d /lib ] && run ln -s /lib /lib64
[ -d /usr/lib ] && run ln -s /usr/lib /usr/lib64

# Basic /dev content, we need it as fast as possible.
[ ! -e /dev/console ]	&& run mknod /dev/console c 5 1
[ ! -e /dev/null ]	&& run mknod /dev/null c 1 3
[ ! -e /dev/tty ]	&& run mknod /dev/tty c 5 0
[ ! -e /dev/urandom ]	&& run mknod /dev/urandom c 1 9
[ ! -e /dev/random ]	&& run mknod /dev/random c 1 8
[ ! -e /dev/zero ]	&& run mknod /dev/zero c 1 5

# Clear the screen
clear

# Basic
kernelver="$(uname -r)"
ver="$(cat /VERSION)"

einfo "better-initramfs v${ver}. Linux kernel ${kernelver}\n"

emount /proc /sys

# Disable kernel messages from popping onto the screen
echo 0 > /proc/sys/kernel/printk

# Process command line options
for i in $(cat /proc/cmdline); do
	case "${i}" in
		root\=*)
			root=$(get_opt $i)
		;;
		init\=*)
			init=$(get_opt $i)
		;;
		enc_root\=*)
			enc_root=$(get_opt $i)
		;;
		luks)
			luks=true
		;;
		lvm)
			lvm=true
		;;
		softraid)
			softraid=true
		;;
		rescueshell)
			rescueshell=true
		;;
		tuxonice)
			tuxonice=true
		;;
		resume\=*)
			resume=$(get_opt $i)
		;;
		rootfstype\=*)
			rootfstype=$(get_opt $i)
		;;
		rootdelay\=*)
			rootdelay=$(get_opt $i)
		;;
	esac
done


if [ -z $root ]; then eerror "\$root variable is empty. This is fatal."; fi


InitializeBusybox
use rootdelay
emount /dev
use softraid InitializeSoftwareRaid
use lvm InitializeLVM
use luks InitializeLUKS && use lvm InitializeLVM
use rescueshell
use tuxonice TuxOnIceResume
emount /newroot
eumount /sys /proc /dev

#Switch to the new root and execute init
if [[ -x "/newroot/${init:-/sbin/init}" ]] ; then
	einfo "Switching root to /newroot and executing /sbin/init."
	exec switch_root /newroot "${init-/sbin/init}"
fi

ewarn "Something goes wrong."
rescueshell
